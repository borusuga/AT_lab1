// -*- tab-width: 4; -*-
//
// The contents of this file are subject to the Mozilla Public
// License Version 1.1 (the "License"); you may not use this file
// except in compliance with the License. You may obtain a copy of
// the License at http://www.mozilla.org/MPL/
//
// Software distributed under the License is distributed on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
// implied. See the License for the specific language governing
// rights and limitations under the License.
//
// The Original Code is State Machine Compiler (SMC).
//
// The Initial Developer of the Original Code is Charles W. Rapp.
// Portions created by Charles W. Rapp are
// Copyright (C) 2000 - 2003 Charles W. Rapp.
// All Rights Reserved.
//
// Contributor(s):
//      Port to Python by Francois Perrad, francois.perrad@gadz.org
//
// State Machine
//	This state machine is recognizes the regular expression 0*1*.
//
// RCS ID
// $Id$
//
// CHANGE LOG
// $Log$
// Revision 1.1  2005/05/28 17:48:29  cwrapp
// Added Python examples 1 - 4 and 7.
//
//

%start Map1::Start
%class ParseSMC

%map Map1
%%
// State		Transition		End State		Action(s)
Start {
				 Letter_I       I               {}
				 Letter_S       S               {}
				 Letter_L       L               {}
                 ClosingBracket BRACKET         {}
}

I {
				 Letter_N       IN              {}
}

IN {
				 Letter_T       INT             {}
}

INT {
				 Space          TYPE            {}
}


S {
				 Letter_H       SH              {}
}

SH {
				 Letter_O       SHO             {}
}

SHO {
				 Letter_R       SHOR            {}
}

SHOR {
				 Letter_T       SHORT           {}
}

SHORT {
				 Space          TYPE            {}
}


L {
				 Letter_O       LO              {}
}

LO {
				 Letter_N       LON             {}
}

LON {
				 Letter_G       LONG            {}
}

LONG {
				 Space          TYPE            {}
}


TYPE {
                 Letter         FunctionName    {Counter();}
				 Letter_I       FunctionName    {Counter();}
				 Letter_S       FunctionName    {Counter();}
				 Letter_L       FunctionName    {Counter();}
				 Letter_N       FunctionName    {Counter();}
				 Letter_T       FunctionName    {Counter();}
				 Letter_H       FunctionName    {Counter();}
				 Letter_O       FunctionName    {Counter();}
				 Letter_R       FunctionName    {Counter();}
				 Letter_G       FunctionName    {Counter();}
}

FunctionName {
                 Letter         FunctionName    {Counter();}
                 Digit          FunctionName    {Counter();}
                 OpenBracket    Start           {ClearCounter(); Times();}
                 ClosingBracket BRACKET         {}
                 Comma          SPACE           {ClearCounter(); ParCount();}
				 Letter_I       FunctionName    {Counter();}
				 Letter_S       FunctionName    {Counter();}
				 Letter_L       FunctionName    {Counter();}
				 Letter_N       FunctionName    {Counter();}
				 Letter_T       FunctionName    {Counter();}
				 Letter_H       FunctionName    {Counter();}
				 Letter_O       FunctionName    {Counter();}
				 Letter_R       FunctionName    {Counter();}
				 Letter_G       FunctionName    {Counter();}
}

BRACKET {
                 EOS            OK              {Acceptable();}
}

SPACE {
				 Space          Start           {}
}

OK {}

Error {
				Unknown			nil				{}
				EOS				nil				{Unacceptable();}

				Letter_I       nil              {}
				Letter_S       nil              {}
				Letter_L       nil              {}
			    Letter_N       nil              {}
				Letter_T       nil              {}
				Space          nil              {}
				Letter_H       nil              {}
				Letter_O       nil              {}
				Letter_R       nil              {}
				Letter_G       nil              {}
				Letter         nil              {}
				Digit          nil              {}
			    OpenBracket    nil              {}
				Comma          nil              {}
                ClosingBracket nil              {}
}

Default {
                 Letter_I       Error           {}
				 Letter_S       Error           {}
				 Letter_L       Error           {}
				 Letter_N       Error           {}
				 Letter_T       Error           {}
				 Letter_H       Error           {}
				 Letter_O       Error           {}
				 Letter_R       Error           {}
				 Letter_G       Error           {}
				 Letter         Error           {}
				 Digit          Error           {}
				 Space          Error           {}
				 OpenBracket    Error           {}
				 Comma          Error           {}
                 ClosingBracket Error           {}
                 Unknown        Error			{}
                 EOS			Error			{}
}

%%
